// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  password     String
  refreshtoken RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Topic {
  id        String     @id @default(cuid())
  key       String     @unique
  title     String
  status    Status     @default(PENDING)
  color     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  subTopics SubTopic[]

  @@map("topics")
}

model SubTopic {
  id           String   @id @default(cuid())
  name         String
  leetCodeLink String?
  youTubeLink  String?
  articleLink  String?
  level        Level
  status       Status   @default(PENDING)
  completed    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  topicId      String
  topic        Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade)

  @@map("sub_topics")
}

enum Status {
  PENDING
  IN_PROGRESS
  DONE
}

enum Level {
  EASY
  MEDIUM
  HARD
}
